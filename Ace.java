
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

class Ace {

	private static JFrame frame;
	private JPanel panel1;
	private Screen display;

	Timer timer;                //timer to execute opcodes at a constant rate
	ActionListener taskPerformer;

	public Ace(String fileName) {

		//set up the program window frame
		frame = new JFrame("ACE (Another Chip-8 Emulator)");
		frame.getContentPane().add(panel1);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setSize(300, 300);
		frame.pack();
		frame.setLocationRelativeTo(null);
		frame.setVisible(true);

		start(fileName);
	}

	public static void main(String args[]) {

		SwingUtilities.invokeLater(new Runnable() {

			public void run() {

				//Use native look and feel
				try {

					//for linux systems like KDE try to use GTK's looks and feel
					if (System.getProperty("os.name").equals("Linux")) {

						//UIManager.setLookAndFeel("com.sun.java.swing.plaf.gtk.GTKLookAndFeel");
						UIManager.setLookAndFeel("javax.swing.plaf.nimbus.NimbusLookAndFeel");

					} else {

						UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
					}

				} catch (Exception e) {

					System.out.println(e);
				}

				//create and show the Swing GUI and create the chip 8 instance
				Ace emulator = new Ace(args[0]);
			}
		});

	}

	public void start(String fileName) {

		Chip8 c8 = new Chip8();     //set up the chip8 emulator instance

		display.setInstance(c8);    //let the display JComponent access the chip8 instance

		c8.loadRom(fileName);

		taskPerformer = new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent evt) {

				if (c8.clock == true) {

					int op = c8.runOpcode();
					
					//if a draw call was issued repaint the screen JComponent to reflect the changes to the screen bufffer
					if (op == 0x0d) {
						
						display.repaint();
					}
					
				} else {

					//stop chip8 clock from running
					timer.stop();
				}
			}
		};

		timer = new Timer(2, taskPerformer);
		timer.start();
			
	}

	{
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
		$$$setupUI$$$();
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$() {
		panel1 = new JPanel();
		panel1.setLayout(new BorderLayout(0, 0));
		display = new Screen();
		display.setBackground(new Color(-13355980));
		panel1.add(display, BorderLayout.CENTER);
		final JPanel panel2 = new JPanel();
		panel2.setLayout(new GridBagLayout());
		panel1.add(panel2, BorderLayout.NORTH);
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$() {
		return panel1;
	}

}
